image: node:18

stages:
  - install
  - build
  - test
  - release     # Sentry-Release upload
  - deploy

variables:
  NODE_ENV: production

cache:
  paths:
    - node_modules/

install_dependencies:
  stage: install
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/

build_app:
  stage: build
  needs: ["install_dependencies"]
  dependencies: ["install_dependencies"]
  script:
    - npm run build
  artifacts:
    paths:
      - dist/

test_app:
  stage: test
  needs: ["install_dependencies"]
  script:
    - npm run test -- --coverage
  artifacts:
    paths:
      - coverage/

sentry_release:
  stage: release
  needs: ["build_app"] 
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script: |
    npm exec --package=@sentry/cli -- sentry-cli releases new "$CI_COMMIT_SHA"
    npm exec --package=@sentry/cli -- sentry-cli releases files "$CI_COMMIT_SHA" upload-sourcemaps dist --rewrite
    npm exec --package=@sentry/cli -- sentry-cli releases finalize "$CI_COMMIT_SHA"
  variables:
    SENTRY_AUTH_TOKEN: $SENTRY_AUTH_TOKEN   # kommt aus GitLab-UI
    SENTRY_ORG: my-org
    SENTRY_PROJECT: javascript-react

deploy_vercel:
  stage: deploy
  needs: ["test_app", "sentry_release"] 
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script: |
    npm i -g vercel@latest
    vercel deploy --prod --token $VERCEL_TOKEN --yes
